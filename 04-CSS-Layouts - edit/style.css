/* mark { */
  /* display: inline-block;
  line-height: 0em;
  padding-bottom: 0.5em;
} */

/* h1,
h2,
h3,
h4,
p, */

/* * {
  margin: 0px;
  padding: 0px;
} */

/* PAGE SECTIONS */
body {
  font-family: sans-serif;
  color: #444;

  border-top: 10px solid #1098ad;
  margin: 0;
  position: relative;
}

.container {
  width: 800px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
  /* position: relative; */
}

.main-header {
  background-color: #e9e9e9;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  /* margin-bottom: 60px; */
  height: 80px;
}

nav {
  /* margin-bottom: 18px; */
  text-align: center;
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
  /* position: relative; */
}

aside {
  background-color: #e9e9e9;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  /* padding-top: 50px;
 padding-bottom: 50px; */
  padding: 50px 0;
  /* width: 500px; */
}

/* SMALLER ELEMENTS */
h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 30px;
}

ul {
  margin-left: 0; !important
}

li {
  font-size: 20px;
  margin-bottom: 10px;
}

/* footer p {
  font-size: 16px;
} */

/*article header p {
  font-style: italic;
}*/

#author {
  font-style: italic;
  font-size: 18px;
}

#copyrights {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

/* ul {
  list-style: none;
} */

.related-posts {
  list-style: none;
}

/* body {
  background-color: rgba(0, 217, 255, 0.445);
} */

/* .first-li {
  font-weight: bold;
} */

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
  margin-bottom: 0px;
}

li:nth-child(2) {
  color: red;
}

article > p:last-child {
  color: red;
}

/* Styling links */
a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline wavy orangered;
}

a:active {
  background-color: #444;
  font-style: italic;
}

.post-img {
  width: 100%;
  height: auto;
}

nav A:link {
  /* background-color: orangered; */
  /* margin: 20px; */
  /* in order to set the text to the center we need to align the parent class. not the link itself. so we need to change the nav element */
  text-align: center;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  /* bottom: 0;
  left: 0; */
  bottom: 50px;
  right: 50px;
}

h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

h2::first-letter {
  font-size: 80px;
}

/* adjacent sibiling */
h3 + p::first-line {
  /* color: red; */
}

h2 {
  /* background-color: orange; */
  position: relative;
}

h2::after {
  content: "top";
  text-transform: uppercase;
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -15px;
  /* left: 0; */
  right: -25px;
} 

/* FLOATS */
/* .author-img {
  float: left
}

.author {
  padding-left: 150px;
  padding-top: 10px;
  float: right 
} 

.clear {
  clear: right;
}

the .clear didnt clear the settings i wrote above */


/* FLEXBOX */
.main-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.author-box {
  display: flex;
  align-items: center;
  margin-bottom: 15px;
}

.author {
  margin-left: 15px;
}

.related {
  list-style: none;
  margin-left: 0;
}

.related-posts {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-bottom: 30px;
}

.related-link:link {
font-size: 17px;
font-weight: bold;
font-style: normal;
margin-bottom: 5px;
/* if we will write only the margin line (margin-bottom: 5px;)- it will not be shown on the code because this is an inline block. we need to define it as a block by the line "display:block", then the margin will affect */
display: block;
}

.related-author {
  margin-bottom: 0;
  margin-top: 0;
  font-size: 14px;
  font-weight: normal;
  font-style: italic;
  color: black;
}

/* FLEXBOX LAYOUT */
.row {
  /* TEMPORARY DISABLE */
  /* display: flex;
  gap: 75px; */
}

aside {
  /* flex-basis: 300px; */
  /* for flex-items we shouldnt use the width property. instead we will use flex-basis. */
  /* now we need to set flex-shrink to zero. so use the flex shorthand below */
  /* Defaults: */
  /* flex-grow: 0;
  flex-shrink: 1;
  flex-basis: auto; */
  
  /* TEMPORARY DISABLE */
  /* flex: 0 0 300px; */
}

article {
  /* TEMPORARY DISABLE */
  /* flex: 0 0 825px; */
}

/* CSS GRIS LAYOUT */
.container {
  display: grid;
  grid-template-columns: 1fr 300px;
  column-gap: 75px;
  row-gap: 60px;
  align-items: start;
}

.main-header {
grid-column: 1 / 3;
/* NOTE TO SELF: its best to activate the grid view from the inspect so i will see clearly what are the cells i want to specify. at first i entered "1 / 2" and didnt realize it says only one cell. instead i could write "1/-1-" -beggining to end. or the third option: "1/span 2"- calculate 2 cells */
}

article {
}

aside {
}

footer {
/* grid-column: 1 / 3; */
/* grid-column: 1 / -1; */
grid-column: -3 / -1;
background-color: #444;
}